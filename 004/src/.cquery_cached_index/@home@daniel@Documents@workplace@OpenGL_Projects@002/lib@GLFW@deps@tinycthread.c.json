16
{"last_modification_time":1579473811,"language":1,"import_file":"/home/daniel/Documents/workplace/OpenGL_Projects/002/lib/GLFW/deps/tinycthread.c","args_hash":13775633268010116346,"includes":[{"line":29,"resolved_path":"/home/daniel/Documents/workplace/OpenGL_Projects/002/lib/GLFW/deps/tinycthread.h"},{"line":30,"resolved_path":"/usr/include/stdlib.h"},{"line":34,"resolved_path":"/usr/include/signal.h"},{"line":35,"resolved_path":"/usr/include/sched.h"},{"line":36,"resolved_path":"/usr/include/unistd.h"},{"line":37,"resolved_path":"/usr/include/x86_64-linux-gnu/sys/time.h"},{"line":38,"resolved_path":"/usr/include/errno.h"}],"dependencies":["/home/daniel/Documents/workplace/OpenGL_Projects/002/lib/GLFW/deps/tinycthread.h","/usr/include/time.h","/usr/include/features.h","/usr/include/x86_64-linux-gnu/sys/cdefs.h","/usr/include/x86_64-linux-gnu/gnu/stubs.h","/usr/include/x86_64-linux-gnu/bits/time.h","/usr/include/x86_64-linux-gnu/bits/types.h","/usr/include/x86_64-linux-gnu/bits/timex.h","/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h","/usr/include/x86_64-linux-gnu/bits/types/clock_t.h","/usr/include/x86_64-linux-gnu/bits/types/time_t.h","/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h","/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h","/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h","/usr/include/x86_64-linux-gnu/bits/types/timer_t.h","/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h","/usr/include/x86_64-linux-gnu/bits/types/locale_t.h","/usr/include/x86_64-linux-gnu/sys/time.h","/usr/include/x86_64-linux-gnu/sys/select.h","/usr/include/x86_64-linux-gnu/bits/select.h","/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h","/usr/include/pthread.h","/usr/include/endian.h","/usr/include/x86_64-linux-gnu/bits/byteswap.h","/usr/include/x86_64-linux-gnu/bits/uintn-identity.h","/usr/include/sched.h","/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h","/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h","/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h","/usr/include/x86_64-linux-gnu/bits/setjmp.h","/usr/include/stdlib.h","/usr/include/x86_64-linux-gnu/bits/libc-header-start.h","/usr/include/x86_64-linux-gnu/bits/floatn.h","/usr/include/x86_64-linux-gnu/bits/floatn-common.h","/usr/include/x86_64-linux-gnu/sys/types.h","/usr/include/x86_64-linux-gnu/bits/stdint-intn.h","/usr/include/x86_64-linux-gnu/sys/sysmacros.h","/usr/include/alloca.h","/usr/include/signal.h","/usr/include/x86_64-linux-gnu/bits/signum.h","/usr/include/x86_64-linux-gnu/bits/types/sig_atomic_t.h","/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h","/usr/include/x86_64-linux-gnu/bits/siginfo-consts.h","/usr/include/x86_64-linux-gnu/bits/types/sigval_t.h","/usr/include/x86_64-linux-gnu/bits/types/sigevent_t.h","/usr/include/x86_64-linux-gnu/bits/sigcontext.h","/usr/include/x86_64-linux-gnu/bits/types/stack_t.h","/usr/include/x86_64-linux-gnu/sys/ucontext.h","/usr/include/x86_64-linux-gnu/bits/sigthread.h","/usr/include/unistd.h","/usr/include/x86_64-linux-gnu/bits/environments.h","/usr/include/x86_64-linux-gnu/bits/getopt_posix.h","/usr/include/errno.h","/usr/include/x86_64-linux-gnu/bits/errno.h","/usr/include/linux/errno.h","/usr/include/x86_64-linux-gnu/asm/errno.h","/usr/include/asm-generic/errno.h","/home/daniel/Software/cquery/build/release/lib/clang/7.0.0/include/stddef.h","/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h","/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h","/usr/include/x86_64-linux-gnu/bits/sched.h","/usr/include/x86_64-linux-gnu/bits/cpu-set.h","/usr/include/x86_64-linux-gnu/bits/waitflags.h","/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h","/usr/include/x86_64-linux-gnu/bits/sigevent-consts.h","/usr/include/x86_64-linux-gnu/bits/sigaction.h","/usr/include/x86_64-linux-gnu/bits/ss_flags.h","/usr/include/x86_64-linux-gnu/bits/types/struct_sigstack.h","/usr/include/x86_64-linux-gnu/bits/confname.h","/usr/include/x86_64-linux-gnu/bits/getopt_core.h","/usr/include/stdc-predef.h","/usr/include/x86_64-linux-gnu/bits/wordsize.h","/usr/include/x86_64-linux-gnu/gnu/stubs-64.h","/usr/include/x86_64-linux-gnu/bits/typesizes.h","/usr/include/x86_64-linux-gnu/bits/endian.h","/usr/include/x86_64-linux-gnu/bits/byteswap-16.h","/usr/include/x86_64-linux-gnu/bits/waitstatus.h","/usr/include/x86_64-linux-gnu/bits/sysmacros.h","/usr/include/x86_64-linux-gnu/bits/stdlib-float.h","/usr/include/x86_64-linux-gnu/bits/signum-generic.h","/usr/include/x86_64-linux-gnu/bits/siginfo-arch.h","/usr/include/x86_64-linux-gnu/bits/siginfo-consts-arch.h","/usr/include/x86_64-linux-gnu/bits/sigstack.h","/usr/include/x86_64-linux-gnu/bits/posix_opt.h","/usr/include/asm-generic/errno-base.h"],"skipped_by_preprocessor":["40:1-43:7","46:1-48:7","58:1-63:6","79:1-81:6","88:1-96:6","111:1-119:6","126:1-130:6","135:1-138:7","142:1-164:6","171:1-181:6","188:1-206:6","213:1-231:6","236:1-283:7","287:1-289:6","296:1-306:6","325:1-327:6","349:1-351:6","374:1-376:6","395:1-397:6","411:1-413:6","420:1-422:6","434:1-445:6","468:1-470:6","478:1-486:6","514:1-516:6","523:1-534:6","545:1-547:6","554:1-556:6","563:1-568:6","577:1-593:7"],"types":[{"id":0,"usr":8209212064115945931,"detailed_name":"mtx_t","short_name_offset":0,"short_name_size":5,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,5,6,7,9,10,16,18],"uses":["56:14-56:19|-1|1|4","77:18-77:23|-1|1|4","86:14-86:19|-1|1|4","101:19-101:24|-1|1|4","109:17-109:22|-1|1|4","124:16-124:21|-1|1|4","285:27-285:32|-1|1|4","294:32-294:37|-1|1|4"]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,2,20,26,36,39,41],"uses":[]},{"id":2,"usr":8882286696263121684,"detailed_name":"pthread_mutexattr_t","short_name_offset":0,"short_name_size":19,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[3],"uses":["65:3-65:22|-1|1|4"]},{"id":3,"usr":3444301960934210981,"detailed_name":"timespec","short_name_offset":0,"short_name_size":8,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[8,19,42,43,44],"uses":["101:44-101:52|-1|1|4","294:57-294:65|-1|1|4","465:29-465:37|-1|1|4","465:58-465:66|-1|1|4","467:10-467:18|-1|1|4"]},{"id":4,"usr":1137371140156396184,"detailed_name":"cnd_t","short_name_offset":0,"short_name_size":5,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[11,12,13,14,15,17],"uses":["140:14-140:19|-1|1|4","169:18-169:23|-1|1|4","186:16-186:21|-1|1|4","211:19-211:24|-1|1|4","285:14-285:19|-1|1|4","294:19-294:24|-1|1|4"]},{"id":5,"usr":9528495778142787246,"detailed_name":"(anon struct)","short_name_offset":0,"short_name_size":13,"kind":23,"hover":"","comments":"Information to pass to the new thread (what to run).","declarations":[],"spell":"319:9-319:15|-1|1|2","extent":"319:9-322:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[21,22],"instances":[],"uses":[]},{"id":6,"usr":430748419706417109,"detailed_name":"_thread_start_info","short_name_offset":0,"short_name_size":18,"kind":252,"hover":"","comments":"","declarations":[],"spell":"322:3-322:21|-1|1|2","extent":"319:1-322:21|-1|1|0","alias_of":5,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[28,32],"uses":["322:3-322:21|-1|1|4","339:3-339:21|-1|1|4","339:29-339:47|-1|1|4","365:3-365:21|-1|1|4","365:29-365:47|-1|1|4","365:63-365:81|-1|1|4"]},{"id":7,"usr":5868058395687088943,"detailed_name":"thrd_start_t","short_name_offset":0,"short_name_size":12,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[21,24,30],"uses":["320:3-320:15|-1|1|4","331:3-331:15|-1|1|4","361:30-361:42|-1|1|4"]},{"id":8,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[22,23,25,27,31,37,40,53],"uses":[]},{"id":9,"usr":1555298201043996119,"detailed_name":"thrd_t","short_name_offset":0,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[29,33,34,35,38],"uses":["361:17-361:23|-1|1|4","393:1-393:7|-1|1|4","402:17-402:23|-1|1|4","409:16-409:22|-1|1|4","409:29-409:35|-1|1|4","432:15-432:21|-1|1|4"]},{"id":10,"usr":18,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[45],"uses":[]},{"id":11,"usr":16677522841382272811,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["499:13-499:23|-1|1|4"]},{"id":12,"usr":9472445133143228922,"detailed_name":"tss_t","short_name_offset":0,"short_name_size":5,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[48,50,51,52],"uses":["521:16-521:21|-1|1|4","543:17-543:22|-1|1|4","552:15-552:20|-1|1|4","561:13-561:18|-1|1|4"]},{"id":13,"usr":16375647582752011556,"detailed_name":"tss_dtor_t","short_name_offset":0,"short_name_size":10,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[49],"uses":["521:28-521:38|-1|1|4"]}],"funcs":[{"id":0,"usr":9964241014067337097,"detailed_name":"int mtx_init(mtx_t *mtx, int type)","short_name_offset":4,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"Create a mutex object.\n@param mtx A mutex object.\n@param type Bit-mask that must have one of the following six values:\n@li @c mtx_plain for a simple non-recursive mutex\n@li @c mtx_timed for a non-recursive mutex that supports timeout\n@li @c mtx_try for a non-recursive mutex that supports test and return\n@li @c mtx_plain | @c mtx_recursive (same as @c mtx_plain, but recursive)\n@li @c mtx_timed | @c mtx_recursive (same as @c mtx_timed, but recursive)\n@li @c mtx_try | @c mtx_recursive (same as @c mtx_try, but recursive)\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"56:5-56:13|-1|1|2","extent":"56:1-75:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2,3],"uses":[],"callees":["66:3-66:25|1|3|36","69:5-69:30|2|3|36","71:9-71:27|3|3|36","72:3-72:28|4|3|36"]},{"id":1,"usr":17957601236822399649,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["66:3-66:25|0|3|36"],"callees":[]},{"id":2,"usr":15327178328132126480,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["69:5-69:30|0|3|36"],"callees":[]},{"id":3,"usr":7971182704080764898,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["71:9-71:27|0|3|36"],"callees":[]},{"id":4,"usr":9902522505847458428,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["72:3-72:28|0|3|36"],"callees":[]},{"id":5,"usr":9861079883080590633,"detailed_name":"void mtx_destroy(mtx_t *mtx)","short_name_offset":5,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"Release any resources used by the given mutex.\n@param mtx A mutex object.","declarations":[],"spell":"77:6-77:17|-1|1|2","extent":"77:1-84:2|-1|1|0","bases":[],"derived":[],"vars":[5],"uses":[],"callees":["82:3-82:24|6|3|36"]},{"id":6,"usr":11704429436804395493,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["82:3-82:24|5|3|36"],"callees":[]},{"id":7,"usr":3397147862777125692,"detailed_name":"int mtx_lock(mtx_t *mtx)","short_name_offset":4,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"Lock the given mutex.\nBlocks until the given mutex can be locked. If the mutex is non-recursive, and\nthe calling thread already has a lock on the mutex, this call will block\nforever.\n@param mtx A mutex object.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"86:5-86:13|-1|1|2","extent":"86:1-99:2|-1|1|0","bases":[],"derived":[],"vars":[6],"uses":[],"callees":["97:10-97:28|8|3|36"]},{"id":8,"usr":2575119788875287062,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["97:10-97:28|7|3|36"],"callees":[]},{"id":9,"usr":1620564742963080910,"detailed_name":"int mtx_timedlock(mtx_t *mtx, const struct timespec *ts)","short_name_offset":4,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"NOT YET IMPLEMENTED.","declarations":[],"spell":"101:5-101:18|-1|1|2","extent":"101:1-107:2|-1|1|0","bases":[],"derived":[],"vars":[7,8],"uses":[],"callees":[]},{"id":10,"usr":1208861732361157753,"detailed_name":"int mtx_trylock(mtx_t *mtx)","short_name_offset":4,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"Try to lock the given mutex.\nThe specified mutex shall support either test and return or timeout. If the\nmutex is already locked, the function returns without blocking.\n@param mtx A mutex object.\n@return @ref thrd_success on success, or @ref thrd_busy if the resource\nrequested is already in use, or @ref thrd_error if the request could not be\nhonored.","declarations":[],"spell":"109:5-109:16|-1|1|2","extent":"109:1-122:2|-1|1|0","bases":[],"derived":[],"vars":[9],"uses":[],"callees":["120:11-120:32|11|3|36"]},{"id":11,"usr":5344124767316711773,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["120:11-120:32|10|3|36"],"callees":[]},{"id":12,"usr":13918048260442344715,"detailed_name":"int mtx_unlock(mtx_t *mtx)","short_name_offset":4,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Unlock the given mutex.\n@param mtx A mutex object.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"124:5-124:15|-1|1|2","extent":"124:1-133:2|-1|1|0","bases":[],"derived":[],"vars":[10],"uses":[],"callees":["131:10-131:30|13|3|36"]},{"id":13,"usr":3151018575482284181,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["131:10-131:30|12|3|36"],"callees":[]},{"id":14,"usr":5717698944936733115,"detailed_name":"int cnd_init(cnd_t *cond)","short_name_offset":4,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"Create a condition variable object.\n@param cond A condition variable object.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"140:5-140:13|-1|1|2","extent":"140:1-167:2|-1|1|0","bases":[],"derived":[],"vars":[11],"uses":[],"callees":["165:10-165:27|15|3|36"]},{"id":15,"usr":8689636261423504007,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["165:10-165:27|14|3|36"],"callees":[]},{"id":16,"usr":1968907581412163005,"detailed_name":"void cnd_destroy(cnd_t *cond)","short_name_offset":5,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"Release any resources used by the given condition variable.\n@param cond A condition variable object.","declarations":[],"spell":"169:6-169:17|-1|1|2","extent":"169:1-184:2|-1|1|0","bases":[],"derived":[],"vars":[12],"uses":[],"callees":["182:3-182:23|17|3|36"]},{"id":17,"usr":1959542316557221144,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["182:3-182:23|16|3|36"],"callees":[]},{"id":18,"usr":13204070620375075093,"detailed_name":"int cnd_signal(cnd_t *cond)","short_name_offset":4,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Signal a condition variable.\nUnblocks one of the threads that are blocked on the given condition variable\nat the time of the call. If no threads are blocked on the condition variable\nat the time of the call, the function does nothing and return success.\n@param cond A condition variable object.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"186:5-186:15|-1|1|2","extent":"186:1-209:2|-1|1|0","bases":[],"derived":[],"vars":[13],"uses":[],"callees":["207:10-207:29|19|3|36"]},{"id":19,"usr":13492172911537904104,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["207:10-207:29|18|3|36","232:10-232:29|20|3|36"],"callees":[]},{"id":20,"usr":6686722391798320417,"detailed_name":"int cnd_broadcast(cnd_t *cond)","short_name_offset":4,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"Broadcast a condition variable.\nUnblocks all of the threads that are blocked on the given condition variable\nat the time of the call. If no threads are blocked on the condition variable\nat the time of the call, the function does nothing and return success.\n@param cond A condition variable object.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"211:5-211:18|-1|1|2","extent":"211:1-234:2|-1|1|0","bases":[],"derived":[],"vars":[14],"uses":[],"callees":["232:10-232:29|19|3|36"]},{"id":21,"usr":2818458693250208557,"detailed_name":"int cnd_wait(cnd_t *cond, mtx_t *mtx)","short_name_offset":4,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"Wait for a condition variable to become signaled.\nThe function atomically unlocks the given mutex and endeavors to block until\nthe given condition variable is signaled by a call to cnd_signal or to\ncnd_broadcast. When the calling thread becomes unblocked it locks the mutex\nbefore it returns.\n@param cond A condition variable object.\n@param mtx A mutex object.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"285:5-285:13|-1|1|2","extent":"285:1-292:2|-1|1|0","bases":[],"derived":[],"vars":[15,16],"uses":[],"callees":["290:10-290:27|22|3|36"]},{"id":22,"usr":7981064435546798941,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["290:10-290:27|21|3|36"],"callees":[]},{"id":23,"usr":6841635429973082162,"detailed_name":"int cnd_timedwait(cnd_t *cond, mtx_t *mtx, const struct timespec *ts)","short_name_offset":4,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"Wait for a condition variable to become signaled.\nThe function atomically unlocks the given mutex and endeavors to block until\nthe given condition variable is signaled by a call to cnd_signal or to\ncnd_broadcast, or until after the specified time. When the calling thread\nbecomes unblocked it locks the mutex before it returns.\n@param cond A condition variable object.\n@param mtx A mutex object.\n@param xt A point in time at which the request will time out (absolute time).\n@return @ref thrd_success upon success, or @ref thrd_timeout if the time\nspecified in the call was reached without acquiring the requested resource, or\n@ref thrd_error if the request could not be honored.","declarations":[],"spell":"294:5-294:18|-1|1|2","extent":"294:1-315:2|-1|1|0","bases":[],"derived":[],"vars":[17,18,19,20],"uses":[],"callees":["308:9-308:31|24|3|36"]},{"id":24,"usr":10270900151876547511,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["308:9-308:31|23|3|36"],"callees":[]},{"id":25,"usr":1180782188729095593,"detailed_name":"static void *_thrd_wrapper_function(void *aArg)","short_name_offset":13,"short_name_size":22,"kind":12,"storage":3,"hover":"","comments":"","declarations":[],"spell":"328:15-328:37|-1|1|2","extent":"328:1-359:2|-1|1|0","bases":[],"derived":[],"vars":[23,24,25,26,27,28],"uses":["377:32-377:54|27|3|4"],"callees":["344:3-344:7|26|3|36"]},{"id":26,"usr":11985661821722328468,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["344:3-344:7|25|3|36","386:5-386:9|27|3|36","455:5-455:9|36|3|36"],"callees":[]},{"id":27,"usr":12795935322572746878,"detailed_name":"int thrd_create(thrd_t *thr, thrd_start_t func, void *arg)","short_name_offset":4,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"Create a new thread.\n@param thr Identifier of the newly created thread.\n@param func A function pointer to the function that will be executed in\n     the new thread.\n@param arg An argument to the thread function.\n@return @ref thrd_success on success, or @ref thrd_nomem if no memory could\nbe allocated for the thread requested, or @ref thrd_error if the request\ncould not be honored.\n@note A thread’s identifier may be reused for a different thread once the\noriginal thread has exited and either been detached or joined to another\nthread.","declarations":[],"spell":"361:5-361:16|-1|1|2","extent":"361:1-391:2|-1|1|0","bases":[],"derived":[],"vars":[29,30,31,32],"uses":[],"callees":["377:6-377:20|28|3|36","377:32-377:54|25|3|4","386:5-386:9|26|3|36"]},{"id":28,"usr":5102935006508281036,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["377:6-377:20|27|3|36"],"callees":[]},{"id":29,"usr":12516573053361467684,"detailed_name":"thrd_t thrd_current()","short_name_offset":7,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"Identify the calling thread.\n@return The identifier of the calling thread.","declarations":[],"spell":"393:8-393:20|-1|1|2","extent":"393:1-400:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":["398:10-398:22|30|3|36"]},{"id":30,"usr":2830846404364160587,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["398:10-398:22|29|3|36"],"callees":[]},{"id":31,"usr":12622347959062280673,"detailed_name":"int thrd_detach(thrd_t thr)","short_name_offset":4,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"NOT YET IMPLEMENTED.","declarations":[],"spell":"402:5-402:16|-1|1|2","extent":"402:1-407:2|-1|1|0","bases":[],"derived":[],"vars":[33],"uses":[],"callees":[]},{"id":32,"usr":18063211460577611510,"detailed_name":"int thrd_equal(thrd_t thr0, thrd_t thr1)","short_name_offset":4,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Compare two thread identifiers.\nThe function determines if two thread identifiers refer to the same thread.\n@return Zero if the two thread identifiers refer to different threads.\nOtherwise a nonzero value is returned.","declarations":[],"spell":"409:5-409:15|-1|1|2","extent":"409:1-416:2|-1|1|0","bases":[],"derived":[],"vars":[34,35],"uses":[],"callees":["414:10-414:23|33|3|36"]},{"id":33,"usr":416993577408359041,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["414:10-414:23|32|3|36"],"callees":[]},{"id":34,"usr":13260483846796630973,"detailed_name":"void thrd_exit(int res)","short_name_offset":5,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Terminate execution of the calling thread.\n@param res Result code of the calling thread.","declarations":[],"spell":"418:6-418:15|-1|1|2","extent":"418:1-430:2|-1|1|0","bases":[],"derived":[],"vars":[36,37],"uses":[],"callees":["428:3-428:15|35|3|36"]},{"id":35,"usr":13616653662217675681,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["428:3-428:15|34|3|36"],"callees":[]},{"id":36,"usr":12821801167539610344,"detailed_name":"int thrd_join(thrd_t thr, int *res)","short_name_offset":4,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Wait for a thread to terminate.\nThe function joins the given thread with the current thread by blocking\nuntil the other thread has terminated.\n@param thr The thread to join with.\n@param res If this pointer is not NULL, the function will store the result\n     code of the given thread in the integer pointed to by @c res.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"432:5-432:14|-1|1|2","extent":"432:1-463:2|-1|1|0","bases":[],"derived":[],"vars":[38,39,40,41],"uses":[],"callees":["448:7-448:19|37|3|36","455:5-455:9|26|3|36"]},{"id":37,"usr":9300663785358851923,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["448:7-448:19|36|3|36"],"callees":[]},{"id":38,"usr":5864707828869640444,"detailed_name":"int thrd_sleep(const struct timespec *time_point, struct timespec *remaining)","short_name_offset":4,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Put the calling thread to sleep.\nSuspend execution of the calling thread.\n@param time_point A point in time at which the thread will resume (absolute time).\n@param remaining If non-NULL, this parameter will hold the remaining time until\n               time_point upon return. This will typically be zero, but if\n               the thread was woken up by a signal that is not ignored before\n               time_point was reached @c remaining will hold a positive\n               time.\n@return 0 (zero) on successful sleep, or -1 if an interrupt occurred.","declarations":[],"spell":"465:5-465:15|-1|1|2","extent":"465:1-510:2|-1|1|0","bases":[],"derived":[],"vars":[42,43,44,45],"uses":[],"callees":["475:7-475:20|39|3|36","494:5-494:11|40|3|36","499:5-499:11|40|3|36"]},{"id":39,"usr":16034779221124573124,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["475:7-475:20|38|3|36"],"callees":[]},{"id":40,"usr":14218845003679310829,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["494:5-494:11|38|3|36","499:5-499:11|38|3|36"],"callees":[]},{"id":41,"usr":14626734524379428576,"detailed_name":"void thrd_yield()","short_name_offset":5,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Yield execution to another thread.\nPermit other threads to run, even if the current thread would ordinarily\ncontinue to run.","declarations":[],"spell":"512:6-512:16|-1|1|2","extent":"512:1-519:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":["517:3-517:14|42|3|36"]},{"id":42,"usr":2337777535044620513,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["517:3-517:14|41|3|36"],"callees":[]},{"id":43,"usr":3479553367268992489,"detailed_name":"int tss_create(tss_t *key, tss_dtor_t dtor)","short_name_offset":4,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Create a thread-specific storage.\n@param key The unique key identifier that will be set if the function is\n     successful.\n@param dtor Destructor function. This can be NULL.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.\n@note The destructor function is not supported under Windows. If @c dtor is\nnot NULL when calling this function under Windows, the function will fail\nand return @ref thrd_error.","declarations":[],"spell":"521:5-521:15|-1|1|2","extent":"521:1-541:2|-1|1|0","bases":[],"derived":[],"vars":[48,49],"uses":[],"callees":["535:7-535:25|44|3|36"]},{"id":44,"usr":11232516436028048937,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["535:7-535:25|43|3|36"],"callees":[]},{"id":45,"usr":17978279999035415557,"detailed_name":"void tss_delete(tss_t key)","short_name_offset":5,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"Delete a thread-specific storage.\nThe function releases any resources used by the given thread-specific\nstorage.\n@param key The key that shall be deleted.","declarations":[],"spell":"543:6-543:16|-1|1|2","extent":"543:1-550:2|-1|1|0","bases":[],"derived":[],"vars":[50],"uses":[],"callees":["548:3-548:21|46|3|36"]},{"id":46,"usr":615599872089667886,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["548:3-548:21|45|3|36"],"callees":[]},{"id":47,"usr":18157165264448273645,"detailed_name":"void *tss_get(tss_t key)","short_name_offset":6,"short_name_size":7,"kind":12,"storage":1,"hover":"","comments":"Get the value for a thread-specific storage.\n@param key The thread-specific storage identifier.\n@return The value for the current thread held in the given thread-specific\nstorage.","declarations":[],"spell":"552:7-552:14|-1|1|2","extent":"552:1-559:2|-1|1|0","bases":[],"derived":[],"vars":[51],"uses":[],"callees":["557:10-557:29|48|3|36"]},{"id":48,"usr":8514834743089962103,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["557:10-557:29|47|3|36"],"callees":[]},{"id":49,"usr":3503365655246513308,"detailed_name":"int tss_set(tss_t key, void *val)","short_name_offset":4,"short_name_size":7,"kind":12,"storage":1,"hover":"","comments":"Set the value for a thread-specific storage.\n@param key The thread-specific storage identifier.\n@param val The value of the thread-specific storage to set for the current\n     thread.\n@return @ref thrd_success on success, or @ref thrd_error if the request could\nnot be honored.","declarations":[],"spell":"561:5-561:12|-1|1|2","extent":"561:1-575:2|-1|1|0","bases":[],"derived":[],"vars":[52,53],"uses":[],"callees":["569:7-569:26|50|3|36"]},{"id":50,"usr":7993635180754156192,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["569:7-569:26|49|3|36"],"callees":[]}],"vars":[{"id":0,"usr":5463818721440485223,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"56:21-56:24|0|3|2","extent":"56:14-56:24|0|3|0","type":0,"uses":["71:28-71:31|0|3|12"],"kind":253,"storage":1},{"id":1,"usr":14177900769331212318,"detailed_name":"int type","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"56:30-56:34|0|3|2","extent":"56:26-56:34|0|3|0","type":1,"uses":["67:7-67:11|0|3|12"],"kind":253,"storage":1},{"id":2,"usr":2732001533965745488,"detailed_name":"int ret","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"64:7-64:10|0|3|2","extent":"64:3-64:10|0|3|0","type":1,"uses":["71:3-71:6|0|3|20","73:10-73:13|0|3|12"],"kind":13,"storage":1},{"id":3,"usr":11461147894488297235,"detailed_name":"pthread_mutexattr_t attr","short_name_offset":20,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"65:23-65:27|0|3|2","extent":"65:3-65:27|0|3|0","type":2,"uses":["66:27-66:31|0|3|132","69:32-69:36|0|3|132","71:34-71:38|0|3|132","72:30-72:34|0|3|132"],"kind":13,"storage":1},{"id":4,"usr":1092263580796271358,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["69:38-69:61|0|3|4"],"kind":0,"storage":0},{"id":5,"usr":5084799228171296619,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"77:25-77:28|5|3|2","extent":"77:18-77:28|5|3|0","type":0,"uses":["82:25-82:28|5|3|12"],"kind":253,"storage":1},{"id":6,"usr":18147217991413005472,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"86:21-86:24|7|3|2","extent":"86:14-86:24|7|3|0","type":0,"uses":["97:29-97:32|7|3|12"],"kind":253,"storage":1},{"id":7,"usr":9946885920855371057,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"101:26-101:29|9|3|2","extent":"101:19-101:29|9|3|0","type":0,"uses":["104:9-104:12|9|3|12"],"kind":253,"storage":1},{"id":8,"usr":14823515013551271021,"detailed_name":"const struct timespec *ts","short_name_offset":23,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"101:54-101:56|9|3|2","extent":"101:31-101:56|9|3|0","type":3,"uses":["105:9-105:11|9|3|12"],"kind":253,"storage":1},{"id":9,"usr":8988746172514706602,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"109:24-109:27|10|3|2","extent":"109:17-109:27|10|3|0","type":0,"uses":["120:33-120:36|10|3|12"],"kind":253,"storage":1},{"id":10,"usr":8754459587848222258,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"124:23-124:26|12|3|2","extent":"124:16-124:26|12|3|0","type":0,"uses":["131:31-131:34|12|3|12"],"kind":253,"storage":1},{"id":11,"usr":1098867547761286894,"detailed_name":"cnd_t *cond","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"140:21-140:25|14|3|2","extent":"140:14-140:25|14|3|0","type":4,"uses":["165:28-165:32|14|3|12"],"kind":253,"storage":1},{"id":12,"usr":13721698130732584669,"detailed_name":"cnd_t *cond","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"169:25-169:29|16|3|2","extent":"169:18-169:29|16|3|0","type":4,"uses":["182:24-182:28|16|3|12"],"kind":253,"storage":1},{"id":13,"usr":12500342495363034171,"detailed_name":"cnd_t *cond","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"186:23-186:27|18|3|2","extent":"186:16-186:27|18|3|0","type":4,"uses":["207:30-207:34|18|3|12"],"kind":253,"storage":1},{"id":14,"usr":1678772091140452269,"detailed_name":"cnd_t *cond","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"211:26-211:30|20|3|2","extent":"211:19-211:30|20|3|0","type":4,"uses":["232:30-232:34|20|3|12"],"kind":253,"storage":1},{"id":15,"usr":5612014737785194129,"detailed_name":"cnd_t *cond","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"285:21-285:25|21|3|2","extent":"285:14-285:25|21|3|0","type":4,"uses":["290:28-290:32|21|3|12"],"kind":253,"storage":1},{"id":16,"usr":17675109579737818263,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"285:34-285:37|21|3|2","extent":"285:27-285:37|21|3|0","type":0,"uses":["290:34-290:37|21|3|12"],"kind":253,"storage":1},{"id":17,"usr":10112304529254929386,"detailed_name":"cnd_t *cond","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"294:26-294:30|23|3|2","extent":"294:19-294:30|23|3|0","type":4,"uses":["308:32-308:36|23|3|12"],"kind":253,"storage":1},{"id":18,"usr":7602349229188798524,"detailed_name":"mtx_t *mtx","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"294:39-294:42|23|3|2","extent":"294:32-294:42|23|3|0","type":0,"uses":["308:38-308:41|23|3|12"],"kind":253,"storage":1},{"id":19,"usr":8229091290183629115,"detailed_name":"const struct timespec *ts","short_name_offset":23,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"294:67-294:69|23|3|2","extent":"294:44-294:69|23|3|0","type":3,"uses":["308:43-308:45|23|3|12"],"kind":253,"storage":1},{"id":20,"usr":12560689144319630369,"detailed_name":"int ret","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"307:7-307:10|23|3|2","extent":"307:3-307:10|23|3|0","type":1,"uses":["308:3-308:6|23|3|20","309:7-309:10|23|3|12","313:10-313:13|23|3|12"],"kind":13,"storage":1},{"id":21,"usr":16078912104899258315,"detailed_name":"thrd_start_t (anon struct)::mFunction","short_name_offset":28,"short_name_size":9,"hover":"","comments":"Pointer to the function to be executed.","declarations":[],"spell":"320:16-320:25|5|2|2","extent":"320:3-320:25|5|2|0","type":7,"uses":["340:13-340:22|25|3|12","370:7-370:16|27|3|20"],"kind":8,"storage":0},{"id":22,"usr":9550323461357356846,"detailed_name":"void *(anon struct)::mArg","short_name_offset":21,"short_name_size":4,"hover":"","comments":"Function argument for the thread function.","declarations":[],"spell":"321:10-321:14|5|2|2","extent":"321:3-321:14|5|2|0","type":8,"uses":["341:13-341:17|25|3|12","371:7-371:11|27|3|20"],"kind":8,"storage":0},{"id":23,"usr":13187420360094182622,"detailed_name":"void *aArg","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"328:45-328:49|25|3|2","extent":"328:38-328:49|25|3|0","type":8,"uses":["339:51-339:55|25|3|12"],"kind":253,"storage":1},{"id":24,"usr":14863152144802045780,"detailed_name":"thrd_start_t fun","short_name_offset":13,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"331:16-331:19|25|3|2","extent":"331:3-331:19|25|3|0","type":7,"uses":["340:3-340:6|25|3|20","347:9-347:12|25|3|44"],"kind":13,"storage":1},{"id":25,"usr":995090646098888720,"detailed_name":"void *arg","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"332:9-332:12|25|3|2","extent":"332:3-332:12|25|3|0","type":8,"uses":["341:3-341:6|25|3|20","347:13-347:16|25|3|12"],"kind":13,"storage":1},{"id":26,"usr":17927241409106404738,"detailed_name":"int res","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"333:8-333:11|25|3|2","extent":"333:3-333:11|25|3|0","type":1,"uses":["347:3-347:6|25|3|20","355:19-355:22|25|3|12"],"kind":13,"storage":1},{"id":27,"usr":7760596968093526907,"detailed_name":"void *pres","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"335:9-335:13|25|3|2","extent":"335:3-335:13|25|3|0","type":8,"uses":["352:3-352:7|25|3|20","353:7-353:11|25|3|12","355:12-355:16|25|3|12","357:10-357:14|25|3|12"],"kind":13,"storage":1},{"id":28,"usr":10485597432064212207,"detailed_name":"_thread_start_info *ti","short_name_offset":20,"short_name_size":2,"hover":"_thread_start_info *ti = (_thread_start_info *) aArg","comments":"Get thread startup information","declarations":[],"spell":"339:23-339:25|25|3|2","extent":"339:3-339:55|25|3|0","type":6,"uses":["340:9-340:11|25|3|12","341:9-341:11|25|3|12","344:16-344:18|25|3|12"],"kind":13,"storage":1},{"id":29,"usr":10729831544351729427,"detailed_name":"thrd_t *thr","short_name_offset":8,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"361:25-361:28|27|3|2","extent":"361:17-361:28|27|3|0","type":9,"uses":["377:21-377:24|27|3|12","379:6-379:9|27|3|12","384:8-384:11|27|3|12"],"kind":253,"storage":1},{"id":30,"usr":6738651235761457034,"detailed_name":"thrd_start_t func","short_name_offset":13,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"361:43-361:47|27|3|2","extent":"361:30-361:47|27|3|0","type":7,"uses":["370:19-370:23|27|3|12"],"kind":253,"storage":1},{"id":31,"usr":1079644476963470592,"detailed_name":"void *arg","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"361:55-361:58|27|3|2","extent":"361:49-361:58|27|3|0","type":8,"uses":["371:14-371:17|27|3|12"],"kind":253,"storage":1},{"id":32,"usr":14809001127288362172,"detailed_name":"_thread_start_info *ti","short_name_offset":20,"short_name_size":2,"hover":"_thread_start_info *ti = (_thread_start_info*)malloc(sizeof(_thread_start_info))","comments":"Fill out the thread startup information (passed to the thread wrapper,\nwhich will eventually free it)","declarations":[],"spell":"365:23-365:25|27|3|2","extent":"365:3-365:83|27|3|0","type":6,"uses":["366:7-366:9|27|3|12","370:3-370:5|27|3|12","371:3-371:5|27|3|12","377:64-377:66|27|3|12","386:10-386:12|27|3|12"],"kind":13,"storage":1},{"id":33,"usr":17047255163906313245,"detailed_name":"thrd_t thr","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"402:24-402:27|31|3|2","extent":"402:17-402:27|31|3|0","type":9,"uses":["405:9-405:12|31|3|12"],"kind":253,"storage":1},{"id":34,"usr":5039016039455233389,"detailed_name":"thrd_t thr0","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"409:23-409:27|32|3|2","extent":"409:16-409:27|32|3|0","type":9,"uses":["414:24-414:28|32|3|12"],"kind":253,"storage":1},{"id":35,"usr":8022874468861001964,"detailed_name":"thrd_t thr1","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"409:36-409:40|32|3|2","extent":"409:29-409:40|32|3|0","type":9,"uses":["414:30-414:34|32|3|12"],"kind":253,"storage":1},{"id":36,"usr":12715524818381375842,"detailed_name":"int res","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"418:20-418:23|34|3|2","extent":"418:16-418:23|34|3|0","type":1,"uses":["426:19-426:22|34|3|12"],"kind":253,"storage":1},{"id":37,"usr":1489041883659411400,"detailed_name":"void *pres","short_name_offset":6,"short_name_size":4,"hover":"void *pres = malloc(sizeof(int))","comments":"","declarations":[],"spell":"423:9-423:13|34|3|2","extent":"423:3-423:35|34|3|0","type":8,"uses":["424:7-424:11|34|3|12","426:12-426:16|34|3|12","428:16-428:20|34|3|12"],"kind":13,"storage":1},{"id":38,"usr":15837434074534544888,"detailed_name":"thrd_t thr","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"432:22-432:25|36|3|2","extent":"432:15-432:25|36|3|0","type":9,"uses":["448:20-448:23|36|3|12"],"kind":253,"storage":1},{"id":39,"usr":15385766613489093697,"detailed_name":"int *res","short_name_offset":5,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"432:32-432:35|36|3|2","extent":"432:27-432:35|36|3|0","type":1,"uses":["457:7-457:10|36|3|12","459:6-459:9|36|3|12"],"kind":253,"storage":1},{"id":40,"usr":1698498820401106195,"detailed_name":"void *pres","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"446:9-446:13|36|3|2","extent":"446:3-446:13|36|3|0","type":8,"uses":["448:26-448:30|36|3|132","452:7-452:11|36|3|12","454:19-454:23|36|3|12","455:10-455:14|36|3|12"],"kind":13,"storage":1},{"id":41,"usr":14361469641260213665,"detailed_name":"int ires","short_name_offset":4,"short_name_size":4,"hover":"int ires = 0","comments":"","declarations":[],"spell":"447:7-447:11|36|3|2","extent":"447:3-447:15|36|3|0","type":1,"uses":["454:5-454:9|36|3|20","459:12-459:16|36|3|12"],"kind":13,"storage":1},{"id":42,"usr":10660367484740668300,"detailed_name":"const struct timespec *time_point","short_name_offset":23,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"465:39-465:49|38|3|2","extent":"465:16-465:49|38|3|0","type":3,"uses":["488:12-488:22|38|3|12","489:12-489:22|38|3|12"],"kind":253,"storage":1},{"id":43,"usr":3511960382857546566,"detailed_name":"struct timespec *remaining","short_name_offset":17,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"465:68-465:77|38|3|2","extent":"465:51-465:77|38|3|0","type":3,"uses":["504:7-504:16|38|3|12","506:5-506:14|38|3|12","507:5-507:14|38|3|12"],"kind":253,"storage":1},{"id":44,"usr":12619543386872512771,"detailed_name":"struct timespec now","short_name_offset":16,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"467:19-467:22|38|3|2","extent":"467:3-467:22|38|3|0","type":3,"uses":["475:38-475:41|38|3|132","488:33-488:36|38|3|4","489:34-489:37|38|3|4"],"kind":13,"storage":1},{"id":45,"usr":14843584259280841208,"detailed_name":"long delta","short_name_offset":5,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"471:8-471:13|38|3|2","extent":"471:3-471:13|38|3|0","type":10,"uses":["488:3-488:8|38|3|20","492:10-492:15|38|3|12","495:5-495:10|38|3|4","497:7-497:12|38|3|12","499:24-499:29|38|3|12"],"kind":13,"storage":1},{"id":46,"usr":8806159757257442498,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["488:24-488:30|38|3|12","488:37-488:43|38|3|12","506:16-506:22|38|3|20"],"kind":0,"storage":0},{"id":47,"usr":7550405565314154740,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["489:24-489:31|38|3|12","489:38-489:45|38|3|12","507:16-507:23|38|3|20"],"kind":0,"storage":0},{"id":48,"usr":11646368457837054840,"detailed_name":"tss_t *key","short_name_offset":7,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"521:23-521:26|43|3|2","extent":"521:16-521:26|43|3|0","type":12,"uses":["535:26-535:29|43|3|12"],"kind":253,"storage":1},{"id":49,"usr":260334019307530020,"detailed_name":"tss_dtor_t dtor","short_name_offset":11,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"521:39-521:43|43|3|2","extent":"521:28-521:43|43|3|0","type":13,"uses":["535:31-535:35|43|3|12"],"kind":253,"storage":1},{"id":50,"usr":5583196092357221488,"detailed_name":"tss_t key","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"543:23-543:26|45|3|2","extent":"543:17-543:26|45|3|0","type":12,"uses":["548:22-548:25|45|3|12"],"kind":253,"storage":1},{"id":51,"usr":13948536523040938916,"detailed_name":"tss_t key","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"552:21-552:24|47|3|2","extent":"552:15-552:24|47|3|0","type":12,"uses":["557:30-557:33|47|3|12"],"kind":253,"storage":1},{"id":52,"usr":4521438505413980982,"detailed_name":"tss_t key","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"561:19-561:22|49|3|2","extent":"561:13-561:22|49|3|0","type":12,"uses":["569:27-569:30|49|3|12"],"kind":253,"storage":1},{"id":53,"usr":9111207903091561347,"detailed_name":"void *val","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"561:30-561:33|49|3|2","extent":"561:24-561:33|49|3|0","type":8,"uses":["569:32-569:35|49|3|12"],"kind":253,"storage":1},{"id":54,"usr":16273657760223884953,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["34:13-34:28|-1|1|4","327:15-327:30|-1|1|4","334:13-334:28|-1|1|4","376:15-376:30|-1|1|4","445:15-445:30|-1|1|4"],"kind":0,"storage":0},{"id":55,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["46:9-46:13|-1|1|4","165:34-165:38|-1|1|4","353:15-353:19|-1|1|4","366:13-366:17|-1|1|4","377:26-377:30|-1|1|4","424:15-424:19|-1|1|4","452:15-452:19|-1|1|4","457:14-457:18|-1|1|4"],"kind":0,"storage":0},{"id":56,"usr":7900166877096163505,"detailed_name":"TRUE","short_name_offset":0,"short_name_size":4,"hover":"#define TRUE 1","comments":"","declarations":[],"spell":"50:11-50:15|-1|1|2","extent":"50:11-50:17|-1|1|0","uses":[],"kind":255,"storage":0},{"id":57,"usr":7210681888738892233,"detailed_name":"FALSE","short_name_offset":0,"short_name_size":5,"hover":"#define FALSE 0","comments":"","declarations":[],"spell":"53:11-53:16|-1|1|2","extent":"53:11-53:18|-1|1|0","uses":[],"kind":255,"storage":0},{"id":58,"usr":2164612708697855798,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["67:14-67:27|-1|1|4"],"kind":0,"storage":0},{"id":59,"usr":11997085524431517717,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["73:21-73:33|-1|1|4","97:41-97:53|-1|1|4","120:46-120:58|-1|1|4","131:43-131:55|-1|1|4","165:47-165:59|-1|1|4","207:43-207:55|-1|1|4","232:43-232:55|-1|1|4","290:46-290:58|-1|1|4","313:21-313:33|-1|1|4","390:10-390:22|-1|1|4","462:10-462:22|-1|1|4","540:10-540:22|-1|1|4","574:10-574:22|-1|1|4"],"kind":0,"storage":0},{"id":60,"usr":8623141513970490070,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["73:36-73:46|-1|1|4","97:56-97:66|-1|1|4","106:10-106:20|-1|1|4","131:58-131:68|-1|1|4","165:62-165:72|-1|1|4","207:58-207:68|-1|1|4","232:58-232:68|-1|1|4","290:61-290:71|-1|1|4","313:36-313:46|-1|1|4","387:12-387:22|-1|1|4","406:10-406:20|-1|1|4","450:12-450:22|-1|1|4","537:12-537:22|-1|1|4","571:12-571:22|-1|1|4"],"kind":0,"storage":0},{"id":61,"usr":6102590460152837674,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["120:61-120:70|-1|1|4"],"kind":0,"storage":0},{"id":62,"usr":5364410164074963823,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["309:14-309:23|-1|1|4"],"kind":0,"storage":0},{"id":63,"usr":255396315895238778,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["311:12-311:24|-1|1|4"],"kind":0,"storage":0},{"id":64,"usr":5222627918416632784,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["368:12-368:22|-1|1|4"],"kind":0,"storage":0},{"id":65,"usr":3116989088049561050,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["475:21-475:35|-1|1|4"],"kind":0,"storage":0}]}